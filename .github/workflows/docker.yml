name: docker

# This workflow triggers on different actions:
# On a new pull request against main:
# - Lint awsenergylabeler/Dockerfile
# - Setup docker build environment
# - Builds the multi-architecture container but don't push
#
# On a push to main or on push of semver tag:
# - Lint awsenergylabeler/Dockerfile
# - Setup docker build and cosign environment
# - Authenticates to container registry
# - Builds the multi-architecture container
# - Pushes the container images to registry
# - Signs the container images
on:
  push:
    branches: main
    paths:
      - "awsenergylabeler/**"
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
  pull_request:
    branches: main

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository_owner as <account>, for this repo is schubergphilis
  IMAGE_NAME: ${{ github.repository_owner }}/awsenergylabeler

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Perform Dockerfile linting every time workflow is triggered
      # https://github.com/hadolint/hadolint-action
      - uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: ./awsenergylabeler/Dockerfile

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: "v1.9.0"

      # Build multi-platform container images
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@d398f07826957cd0a18ea1b059cf1207835e60bc
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
      - name: Extract Docker metadata lambda
        id: meta-lambda
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-lambda
            type=semver,pattern={{version}}
      # Build and push Docker image with Buildx (don't push on PR)
      # Also make use of Github Actions cache to speed up pipeline runs
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@1cb9d22b932e4832bb29793b7777ec860fc1cde0
        with:
          context: awsenergylabeler
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push Docker image lambda
        id: build-and-push-lambda
        uses: docker/build-push-action@1cb9d22b932e4832bb29793b7777ec860fc1cde0
        with:
          context: awsenergylabeler-lambda
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-lambda.outputs.tags }}
          labels: ${{ steps.meta-lambda.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: |
          cosign sign --key env://COSIGN_PRIVATE_KEY \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "ref=${{ github.sha }}" \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}